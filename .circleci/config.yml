version: 2.1

jobs:
  server_build_and_check:
    docker:
      # TODO use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:latest

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "wereyouhere/requirements.txt" }}-{{ checksum "wereyouhere/requirements-dev.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r wereyouhere/requirements.txt
            pip install -r wereyouhere/requirements-dev.txt
            pip install 'kython@git+https://github.com/karlicoss/kython.git@master' dateparser typing_extensions

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "wereyouhere/requirements.txt" }}-{{ checksum "wereyouhere/requirements-dev.txt" }}
        
      - run:
          name: run tests
          when: always
          command: |
            . venv/bin/activate
            pytest test.py

      # TODO enable these later
      # - run:
      #     name: run mypy
      #     when: always
      #     command: |
      #       . venv/bin/activate
      #       mypy wereyouhere scripts/**.py

      # - run:
      #     name: run pylint
      #     when: always
      #     command: |
      #       . venv/bin/activate
      #       pylint -E wereyouhere scripts/**.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
  client_build_and_check:
    docker:
      - image: circleci/node:latest
    working_directory: ~/project/extension # https://stackoverflow.com/a/50570581/706389
    steps:
      - checkout:
          path: ~/project

      - run: npm install
      - run:
          name: build
          command: ./build --firefox --release
      - run:
          name: js flow
          command: npm run flow # TODO use flow discovery or something??
          when: always 
      - run:
          name: js eslint
          command: npm run eslint
          when: always 
      - run:
          name: tests
          command: npm run test
          when: always
      # TODO pack?


workflows:
  version: 2

  build_and_test:
    jobs:
      - client_build_and_check
      - server_build_and_check
